{
  
    
        "post0": {
            "title": "When Papa Atom Met Mama Atom",
            "content": "Bokeh . Let&#39;s use this example from Bokeh documentation to display an interactive Periodic Table of Elements. . A standard Bokeh workflow for displaying plots inline in Jupyter Notebook or Jupyter Lab goes like this: . 1) call output_notebook(), 2) construct our plot object p, 3) pass the plot object into show(). . The plots show up in the notebook but do not survive the process of conversion to a static HTML page. What do we do? . Using bokeh.embed.components, we can extract the JS and HTML snippets. Then we recombine them into one JS+HTML chunk with f-string formatting, and render the plot with the help of IPython.display. . from bokeh.plotting import figure, show, output_notebook from bokeh.sampledata.periodic_table import elements from bokeh.transform import dodge, factor_cmap . periods = [&quot;I&quot;, &quot;II&quot;, &quot;III&quot;, &quot;IV&quot;, &quot;V&quot;, &quot;VI&quot;, &quot;VII&quot;] groups = [str(x) for x in range(1, 19)] df = elements.copy() df[&quot;atomic mass&quot;] = df[&quot;atomic mass&quot;].astype(str) df[&quot;group&quot;] = df[&quot;group&quot;].astype(str) df[&quot;period&quot;] = [periods[x-1] for x in df.period] df = df[df.group != &quot;-&quot;] df = df[df.symbol != &quot;Lr&quot;] df = df[df.symbol != &quot;Lu&quot;] cmap = { &quot;alkali metal&quot; : &quot;#a6cee3&quot;, &quot;alkaline earth metal&quot; : &quot;#1f78b4&quot;, &quot;metal&quot; : &quot;#d93b43&quot;, &quot;halogen&quot; : &quot;#999d9a&quot;, &quot;metalloid&quot; : &quot;#e08d49&quot;, &quot;noble gas&quot; : &quot;#eaeaea&quot;, &quot;nonmetal&quot; : &quot;#f1d4Af&quot;, &quot;transition metal&quot; : &quot;#599d7A&quot;, } TOOLTIPS = [ (&quot;Name&quot;, &quot;@name&quot;), (&quot;Atomic number&quot;, &quot;@{atomic number}&quot;), (&quot;Atomic mass&quot;, &quot;@{atomic mass} Da&quot;), (&quot;CPK color&quot;, &quot;$color[hex, swatch]:CPK&quot;), (&quot;Melting point&quot;, &quot;@{melting point} K&quot;), (&quot;Boiling point&quot;, &quot;@{boiling point} K&quot;), (&quot;Density&quot;, &quot;@{density} g/mL&quot;), (&quot;Ionic radius&quot;, &quot;@{ion radius} pm&quot;), (&quot;Electronegativity&quot;, &quot;@{electronegativity}&quot;), (&quot;Year Discovered&quot;, &quot;@{year discovered}&quot;), ] p = figure(title=&quot;Periodic Table (omitting LA and AC Series)&quot;, width=1000, height=450, x_range=groups, y_range=list(reversed(periods)), tools=&quot;hover&quot;, toolbar_location=None, tooltips=TOOLTIPS) r = p.rect(&quot;group&quot;, &quot;period&quot;, 0.95, 0.95, source=df, fill_alpha=0.6, legend_field=&quot;metal&quot;, color=factor_cmap(&#39;metal&#39;, palette=list(cmap.values()), factors=list(cmap.keys()))) text_props = dict(source=df, text_align=&quot;left&quot;, text_baseline=&quot;middle&quot;) x = dodge(&quot;group&quot;, -0.4, range=p.x_range) p.text(x=x, y=&quot;period&quot;, text=&quot;symbol&quot;, text_font_style=&quot;bold&quot;, **text_props) p.text(x=x, y=dodge(&quot;period&quot;, 0.3, range=p.y_range), text=&quot;atomic number&quot;, text_font_size=&quot;11px&quot;, **text_props) p.text(x=x, y=dodge(&quot;period&quot;, -0.35, range=p.y_range), text=&quot;name&quot;, text_font_size=&quot;7px&quot;, **text_props) p.text(x=x, y=dodge(&quot;period&quot;, -0.2, range=p.y_range), text=&quot;atomic mass&quot;, text_font_size=&quot;7px&quot;, **text_props) p.text(x=[&quot;3&quot;, &quot;3&quot;], y=[&quot;VI&quot;, &quot;VII&quot;], text=[&quot;LA&quot;, &quot;AC&quot;], text_align=&quot;center&quot;, text_baseline=&quot;middle&quot;) p.outline_line_color = None p.grid.grid_line_color = None p.axis.axis_line_color = None p.axis.major_tick_line_color = None p.axis.major_label_standoff = 0 p.legend.orientation = &quot;horizontal&quot; p.legend.location =&quot;top_center&quot; p.hover.renderers = [r] # only hover element boxes . . # output_notebook() # works in a notebook but not on a Github Pages Jekyll site # show(p) # so we will use `components` instead . from bokeh.embed import components from IPython.display import display, HTML script, div = components(p) html = f&quot;&quot;&quot; &lt;script src=&quot;https://cdn.bokeh.org/bokeh/release/bokeh-2.4.3.min.js&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.4.3.min.js&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt; {script} {div} &quot;&quot;&quot; . . Why triple quotes? . The f&quot;&quot;&quot; &quot;&quot;&quot; is an f-string literal.1 They are great for programmatically constructing large chunks of non-Python code. . 1. PEP 498 &ndash; Literal String Interpolation↩ . Success! . display(HTML(html)) . . Tip: Hover over the elements to see additional information. . Altair . Just works. (though the browser console is complaining) . import altair as alt . keep_columns = [&#39;group&#39;, &#39;electronegativity&#39;, &#39;atomic number&#39;, &#39;atomic mass&#39;, &#39;symbol&#39;] elements_ = elements.loc[elements.group != &#39;-&#39;, keep_columns].copy() elements_[&#39;group&#39;] = elements_[&#39;group&#39;].astype(int) . slider = alt.binding_range(min=1, max=18, step=1, name=&#39;group:&#39;) selector = alt.selection_single(fields=[&#39;group&#39;], bind=slider, init={&#39;group&#39;: 17}) chart = ( alt.Chart(elements_, title=f&quot;Periodic electronegativity trends within groups&quot;).mark_point() .encode( x=alt.X(&#39;electronegativity:Q&#39;, scale=alt.Scale(domain=(0.5, 4.5))), y=alt.Y(&#39;symbol:N&#39;, sort=elements.symbol.to_numpy()), tooltip=[&#39;symbol&#39;,&#39;atomic number&#39;,&#39;atomic mass&#39;] ) .add_selection(selector) .transform_filter(selector) .properties(width=400, height=200) .interactive() ) chart .",
            "url": "https://liquidcarbon.github.io/blog/altair/bokeh/elements/2022/09/12/Test-Bokeh-Altair.html",
            "relUrl": "/altair/bokeh/elements/2022/09/12/Test-Bokeh-Altair.html",
            "date": " • Sep 12, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://liquidcarbon.github.io/blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://liquidcarbon.github.io/blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}